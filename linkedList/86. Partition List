//86. Partition List

//Code:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode l1=new ListNode(0);
        ListNode l2=new ListNode(0);
        ListNode l1Head=l1;
        ListNode l2Head=l2;
        while(head!=null){
            if(head.val<x){
                l1Head.next=head;
                l1Head=l1Head.next;
            }
            else{
                l2Head.next=head;
                l2Head=l2Head.next;
            }
            head=head.next;
        }
        l2Head.next=null;
        l1Head.next=l2.next;
        return l1.next;
    }
}

//206. Reverse Linked List
Link=> https://leetcode.com/problems/reverse-linked-list/

Code:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head==null||head.next==null) return head;
        
        ListNode curr=head;
        ListNode prev=null;
        while(curr!=null){
            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}


//Recursive
Link=> https://practice.geeksforgeeks.org/problems/reverse-a-linked-list/1/?track=DSASP-LinkedList&batchId=154

Node reverseList(Node head)
    {
        if(head==null||head.next==null)return head;
        
        Node restHead=reverseList(head.next);
        Node restTail=head.next;
        restTail.next=head;
        head.next=null;
        return restHead;
    }

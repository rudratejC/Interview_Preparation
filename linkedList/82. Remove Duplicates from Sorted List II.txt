//82. Remove Duplicates from Sorted List II
//Link=> https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/

Code:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null || head.next==null)return head;
        ListNode dummy=new ListNode(0,head);
        ListNode tmp=dummy;
        ListNode curr=head.next;
        while(curr!=null){
            boolean isDup=false;
            while(curr!=null && tmp.next.val==curr.val){
                isDup=true;
                curr=curr.next;
            }
            if(isDup){
                tmp.next=curr;
            }
            else{
                tmp=tmp.next;
            }
            if(curr!=null){
                curr=curr.next;
            }
        }
        return dummy.next;
    }
}


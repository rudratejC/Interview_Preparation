//445. Add Two Numbers II

//Code:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1==null || l2==null) return (l1==null)? l2:l1;
        ListNode h1=revList(l1);
        ListNode h2=revList(l2);
        ListNode res=new ListNode(-1);
        ListNode resHead=res;
        int carry=0;
        while(h1!=null||h2!=null||carry!=0){
            int sum=carry+(h1!=null?h1.val:0)+(h2!=null?h2.val:0);
            int lastDigit=sum%10;
            carry=sum/10;
            res.next=new ListNode(lastDigit);
            res=res.next;
            if(h1!=null)h1=h1.next;
            if(h2!=null)h2=h2.next;
        }
        return revList(resHead.next);
    }
    
    ListNode revList(ListNode head) {
        if(head==null||head.next==null) return head;
        
        ListNode curr=head;
        ListNode prev=null;
        while(curr!=null){
            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}
